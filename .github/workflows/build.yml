---

# -------------------------------------------------------------------------------------------------
# Job Name
# -------------------------------------------------------------------------------------------------
name: build


# -------------------------------------------------------------------------------------------------
# When to run
# -------------------------------------------------------------------------------------------------
on:
  # Runs on Pull Requests
  pull_request:
  # Runs on Push
  push:


# -------------------------------------------------------------------------------------------------
# What to run
# -------------------------------------------------------------------------------------------------
jobs:
  build:
    name: "[ ${{ matrix.version }} ]"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        version:
          - 'TF-latest TG-latest'

          - 'TF-1.0    TG-0.31'

          - 'TF-0.15   TG-0.29'

          - 'TF-0.14   TG-0.28'
          - 'TF-0.14   TG-0.27'
          - 'TF-0.14   TG-0.26'
          - 'TF-0.14   TG-0.25'
          - 'TF-0.14   TG-0.24'
          - 'TF-0.14   TG-0.23'

          - 'TF-0.13   TG-0.28'
          - 'TF-0.13   TG-0.27'
          - 'TF-0.13   TG-0.26'
          - 'TF-0.13   TG-0.25'
          - 'TF-0.13   TG-0.24'
          - 'TF-0.13   TG-0.23'

          - 'TF-0.12   TG-0.28'
          - 'TF-0.12   TG-0.27'
          - 'TF-0.12   TG-0.26'
          - 'TF-0.12   TG-0.25'
          - 'TF-0.12   TG-0.24'
          - 'TF-0.12   TG-0.23'
          - 'TF-0.12   TG-0.22'
          - 'TF-0.12   TG-0.21'
          - 'TF-0.12   TG-0.20'
          - 'TF-0.12   TG-0.19'

          - 'TF-0.11   TG-0.18'
    steps:

      # ------------------------------------------------------------
      # Checkout repository
      # ------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set variables
        id: vars
        run: |

          TF_VERSION="$( echo "${VERSION}" | awk '{print $1}' | sed 's/TF\-//g' )"
          TG_VERSION="$( echo "${VERSION}" | awk '{print $2}' | sed 's/TG\-//g' )"

          if [ "${TG_VERSION}" = "latest" ] && [ "${TF_VERSION}" = "latest" ]; then
            TAG=latest
          else
            TAG="${TF_VERSION}-${TG_VERSION}"
          fi

          # Retrieve git info (tags, etc)
          git fetch --all

          # Branch, Tag or Commit
          GIT_TYPE="$( \
            curl -sS https://raw.githubusercontent.com/cytopia/git-tools/master/git-info.sh \
            | sh \
            | grep '^GIT_TYPE' \
            | sed 's|.*=||g' \
          )"
          # Branch name, Tag name or Commit Hash
          GIT_SLUG="$( \
            curl -sS https://raw.githubusercontent.com/cytopia/git-tools/master/git-info.sh \
            | sh \
            | grep '^GIT_NAME' \
            | sed 's|.*=||g' \
          )"
          # Docker Tag
          if [ "${GIT_TYPE}" = "BRANCH" ] && [ "${GIT_SLUG}" = "master" ]; then
            DOCKER_TAG="${TAG}"
          else
            DOCKER_TAG="${TAG}-${GIT_SLUG}"
          fi

          # Output
          echo "GIT_TYPE=${GIT_TYPE}"
          echo "GIT_SLUG=${GIT_SLUG}"
          echo "DOCKER_TAG=${DOCKER_TAG}"
          echo "TF_VERSION=${TF_VERSION}"
          echo "TG_VERSION=${TG_VERSION}"

          # Export variable
          # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#environment-files
          echo "GIT_TYPE=${GIT_TYPE}"      >> ${GITHUB_ENV}
          echo "GIT_SLUG=${GIT_SLUG}"      >> ${GITHUB_ENV}
          echo "DOCKER_TAG=${DOCKER_TAG}"  >> ${GITHUB_ENV}
          echo "TF_VERSION=${TF_VERSION}"  >> ${GITHUB_ENV}
          echo "TG_VERSION=${TG_VERSION}"  >> ${GITHUB_ENV}
        env:
          VERSION: ${{ matrix.version }}


      # ------------------------------------------------------------
      # Build
      # ------------------------------------------------------------
      - name: Build
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep 2;
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }
          retry make build TF_VERSION=${TF_VERSION} TG_VERSION=${TG_VERSION}
        env:
          RETRIES: 20

      - name: Test
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep 2;
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }
          retry make test TF_VERSION=${TF_VERSION} TG_VERSION=${TG_VERSION}
          git diff --quiet || { echo "Build Changes"; git diff; git status; false; }
        env:
          RETRIES: 20


      # ------------------------------------------------------------
      # Deploy
      # ------------------------------------------------------------
      - name: Publish images (only repo owner)
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep ${PAUSE};
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }

          # Output
          echo "GIT_TYPE=${GIT_TYPE}"
          echo "GIT_SLUG=${GIT_SLUG}"
          echo "DOCKER_TAG=${DOCKER_TAG}"

          # Tag image
          retry make tag TAG=${DOCKER_TAG}
          docker images

          # Login and Push
          retry make login USER=${{ secrets.DOCKERHUB_USERNAME }} PASS=${{ secrets.DOCKERHUB_PASSWORD }}
          retry make push TAG=${DOCKER_TAG}
        env:
          RETRIES: 20
          PAUSE: 10
        # https://help.github.com/en/github/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#functions
        if: github.event.pull_request.base.repo.id == github.event.pull_request.head.repo.id
            && (
              (github.event_name == 'schedule' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && startsWith(github.ref, 'refs/heads/release-'))
            )
